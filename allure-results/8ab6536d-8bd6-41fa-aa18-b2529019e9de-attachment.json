{
  "script": "return (function isElementDisplayed(element) {\r\n    function nodeIsElement(node) {\r\n        if (!node) {\r\n            return false;\r\n        }\r\n        switch (node.nodeType) {\r\n            case Node.ELEMENT_NODE:\r\n            case Node.DOCUMENT_NODE:\r\n            case Node.DOCUMENT_FRAGMENT_NODE:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    function parentElementForElement(element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\r\n    }\r\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\r\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\r\n            if (predicate(node)) {\r\n                return node;\r\n            }\r\n        return null;\r\n    }\r\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\r\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\r\n            if (predicate(element)) {\r\n                return element;\r\n            }\r\n        return null;\r\n    }\r\n    function cascadedStylePropertyForElement(element, property) {\r\n        if (!element || !property) {\r\n            return null;\r\n        }\r\n        if (element instanceof DocumentFragment) {\r\n            element = element.host;\r\n        }\r\n        let computedStyle = window.getComputedStyle(element);\r\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\r\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\r\n            return computedStyleProperty;\r\n        }\r\n        let parentElement = parentElementForElement(element);\r\n        return cascadedStylePropertyForElement(parentElement, property);\r\n    }\r\n    function elementSubtreeHasNonZeroDimensions(element) {\r\n        let boundingBox = element.getBoundingClientRect();\r\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\r\n            return true;\r\n        }\r\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\r\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\r\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\r\n        }\r\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\r\n        if (cascadedOverflow === 'hidden') {\r\n            return false;\r\n        }\r\n        return Array.from(element.childNodes).some((childNode) => {\r\n            if (childNode.nodeType === Node.TEXT_NODE) {\r\n                return true;\r\n            }\r\n            if (nodeIsElement(childNode)) {\r\n                return elementSubtreeHasNonZeroDimensions(childNode);\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    function elementOverflowsContainer(element) {\r\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\r\n        if (cascadedOverflow !== 'hidden') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function isElementSubtreeHiddenByOverflow(element) {\r\n        if (!element) {\r\n            return false;\r\n        }\r\n        if (!elementOverflowsContainer(element)) {\r\n            return false;\r\n        }\r\n        if (!element.childNodes.length) {\r\n            return false;\r\n        }\r\n        return Array.from(element.childNodes).every((childNode) => {\r\n            if (childNode.nodeType === Node.TEXT_NODE) {\r\n                return false;\r\n            }\r\n            if (!nodeIsElement(childNode)) {\r\n                return true;\r\n            }\r\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\r\n                return true;\r\n            }\r\n            return isElementSubtreeHiddenByOverflow(childNode);\r\n        });\r\n    }\r\n    function isElementInsideShadowRoot(element) {\r\n        if (!element) {\r\n            return false;\r\n        }\r\n        if (element.parentNode && element.parentNode.host) {\r\n            return true;\r\n        }\r\n        return isElementInsideShadowRoot(element.parentNode);\r\n    }\r\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\r\n        return false;\r\n    }\r\n    switch (element.tagName.toUpperCase()) {\r\n        case 'BODY':\r\n            return true;\r\n        case 'SCRIPT':\r\n        case 'NOSCRIPT':\r\n            return false;\r\n        case 'OPTGROUP':\r\n        case 'OPTION': {\r\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\r\n            return isElementDisplayed(enclosingSelectElement);\r\n        }\r\n        case 'INPUT':\r\n            if (element.type === 'hidden') {\r\n                return false;\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\r\n        return false;\r\n    }\r\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\r\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\r\n    });\r\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\r\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\r\n    });\r\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\r\n        return false;\r\n    }\r\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\r\n        return false;\r\n    }\r\n    if (isElementSubtreeHiddenByOverflow(element)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}).apply(null, arguments)",
  "args": [
    {
      "element-6066-11e4-a52e-4f735466cecf": "d8c36147-13e8-4844-97a2-61aa51846354",
      "ELEMENT": "d8c36147-13e8-4844-97a2-61aa51846354"
    }
  ]
}